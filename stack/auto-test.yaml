apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: source-apps
  namespace: argocd
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
  - git:
      repoURL: https://github.com/OpsMx/argo-customer-demo.git
      revision: new-test
      files:
        - path: "source-apps/config.json"  # Reference the config.json file in your repository
      values:
        newPaths: "{{(index .files.source-apps.config.json.newPath) }}" # Array of paths from config.json
  template:
    metadata:
      name: '{{index (splitList "/" .newPath) (len (splitList "/" .newPath) - 1)}}'  # Use the last segment of the path as the application name
    spec:
      project: default
      source:
        repoURL: https://github.com/OpsMx/argo-customer-demo.git
        targetRevision: new-test
        path: "{{.newPaths}}"  # Path to the YAML files to be deployed
      destination:
        server: https://kubernetes.default.svc
        namespace: test
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true





#this code working 
# apiVersion: argoproj.io/v1alpha1
# kind: ApplicationSet
# metadata:
#   name: source-apps
#   namespace: argocd
# spec:
#   goTemplate: true
#   goTemplateOptions: ["missingkey=error"]
#   generators:
#   - git:
#       repoURL: https://github.com/OpsMx/argo-customer-demo.git
#       revision: new-test
#       files:
#         - path: "source-apps/**/*.yaml"  # This will recursively include all .yaml files under the source-apps directory
#       values:
#         base_dir: "{{index .path.segments 0}}/{{index .path.segments 1}}/{{index .path.segments 2}}"
#   template:
#     metadata:
#       name: '{{.path.basename}}'  # Dynamic name based on the file being deployed
#     spec:
#       project: default
#       source:
#         repoURL: https://github.com/OpsMx/argo-customer-demo.git
#         targetRevision: new-test
#         path: "{{.values.base_dir}}"  # Use the base_dir to target the correct path
#       destination:
#         server: https://kubernetes.default.svc
#         namespace: test
#       syncPolicy:
#         automated:
#           prune: true
#           selfHeal: true  # Use the basename of the application directory for the namespace


